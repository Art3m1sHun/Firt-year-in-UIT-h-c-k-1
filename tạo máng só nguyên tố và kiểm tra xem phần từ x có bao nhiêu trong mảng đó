Tạo mảng một chiều a bao gồm n số nguyên tố theo thứ tự tăng dần. Nhập vào chữ số y (0 ≤ y ≤9). 
Tìm xem trong mảng a có bao nhiêu phần tử chứa số y.
Input
  Dòng đầu tiên là số nguyên y.
  Dòng tiếp theo là số phần tử của mảng a.
Output
  Số phần tử chứa y có trong mảng a.


#include <iostream>
#include <math.h>
using namespace std;
#define MAX 100

void NhapmangSNT(int a[], int &n);
int SoPhanTuChuaY(int a[], int n,int y);\

bool isPrime(int n) {
    if (n <= 1) return false;
    if (n <= 3) return true;
    if (n % 2 == 0 || n % 3 == 0) return false;
    for (int i = 5; i * i <= n; i += 6) {
        if (n % i == 0 || n % (i + 2) == 0) return false;
    }
    return true;
}

void NhapmangSNT(int a[], int &n){
	cin>>n;
	int num = 2;
    int count = 0;
    while (count < n) {
        if (isPrime(num)) {
            a[count] = num;
            count++;
        }
        num++;
    }
}


 int SoPhanTuChuaY(int a[], int n, int y) {
    int yCount = 0;
    for (int i = 0; i < n; i++) {
        int currentNumber = a[i];
        while (currentNumber > 0) {
            int digit = currentNumber % 10;
            if (digit == y) {
                yCount++;
                break;
            }
            currentNumber /= 10;
        }
    }
    return yCount;
}
 
int main(){
	int a[MAX], n, y;
	cin >>y;
	NhapmangSNT(a,n);
	cout << SoPhanTuChuaY(a, n, y) << endl;;
	return 0;
}
